name: CI

on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - '*'

jobs:
  testsuite:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        php-version: ['7.2', '7.4']
        db-type: [sqlite, mysql, pgsql]
        prefer-lowest: ['']
        include:
          - php-version: '7.2'
            db-type: 'sqlite'
            prefer-lowest: 'prefer-lowest'

    env:
      MYSQL_URL: mysql://root:root@127.0.0.1/docket
      POSTGRES_URL: postgres://postgres:postgres@127.0.0.1/docket
      SQLITE_URL: sqlite://./docket.db

    steps:
    - name: Setup MySQL latest
      if: matrix.db-type == 'mysql' && matrix.php-version != '7.2'
      run: docker run --rm --name=mysqld -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=docket -p 3306:3306 -d mysql --default-authentication-plugin=mysql_native_password --disable-log-bin

    - name: Setup PostgreSQL latest
      if: matrix.db-type == 'pgsql' && matrix.php-version != '7.2'
      run: docker run --rm --name=postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=docket -p 5432:5432 -d postgres

    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, intl,  pdo_${{ matrix.db-type }}
        coverage: pcov

    - name: composer install
      run: |
        if ${{ matrix.prefer-lowest == 'prefer-lowest' }}; then
          composer update --prefer-lowest --prefer-stable
        else
          composer update
        fi

    - name: Run PHPUnit
      run: |
        if [[ ${{ matrix.db-type }} == 'sqlite' ]]; then export DATABASE_TEST_URL=$SQLITE_URL; fi
        if [[ ${{ matrix.db-type }} == 'mysql' && ${{ matrix.php-version }} != '7.2' ]]; then export DATABASE_TEST_URL=$MYSQL_URL; fi
        if [[ ${{ matrix.db-type }} == 'pgsql' ]]; then export DATABASE_TEST_URL=$POSTGRES_URL; fi

        if [[ ${{ matrix.php-version }} == '7.4' ]]; then
          export CODECOVERAGE=1 && vendor/bin/phpunit --verbose --coverage-clover=coverage.xml
        else
          vendor/bin/phpunit
        fi

    - name: Submit code coverage
      if: matrix.php-version == '7.4'
      uses: codecov/codecov-action@v1

  acceptace:
    name: Browser Acceptance
    runs-on: ubuntu-18.04

    steps:
    - name: Setup MySQL latest
      if: matrix.db-type == 'mysql' && matrix.php-version != '7.2'
      run: docker run --rm --name=mysqld -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=cakephp -p 3306:3306 -d mysql --default-authentication-plugin=mysql_native_password --disable-log-bin

    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 7.4
        extensions: mbstring, intl, pdo_mysql
        coverage: pcov

    - name: composer install
      run: |
        composer update

    - name: Run PHPUnit
      run: |
        vendor/bin/phpunit --testsuite=acceptance


  cs-stan:
    name: Coding Standard & Static Analysis
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        extensions: mbstring, intl
        coverage: none

    - name: composer install
      run: composer update

    - name: Run PHP CodeSniffer
      run: vendor/bin/phpcs --report=checkstyle src/ tests/

    - name: Run psalm
      if: success() || failure()
      run: vendor/bin/psalm.phar --output-format=github
