<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="/css/feed.xsl"?>
<rss version="2.0"><channel><title>Recent Writing - Mark Story</title><link>https://mark-story.com/posts/archive</link><description>Recent writing and musings of Mark Story</description><language>en-us</language><managingEditor>mark@mark-story.com (Mark Story)</managingEditor><item><title>Server rendered components with template fragments and webcomponents</title><link>https://mark-story.com/posts/view/server-rendered-components-with-template-fragments-and-webcomponents?utm_source=rss</link><guid>https://mark-story.com/posts/view/server-rendered-components-with-template-fragments-and-webcomponents?utm_source=rss</guid><description>As I use webcomponents more, I found myself wanting a way to define the HTML for webcomponents with a non-trivial amount of light DOM contents in a more reusable programatic way. So far, I&#x2019;ve found that modelling webcomponents as template fragments is a reasonably ergonomic solution. It enables usage such as:</description><pubDate>Sun, 28 Jul 2024 17:25:01 +0000</pubDate></item><item><title>Building a confirm dialog flow with htmx</title><link>https://mark-story.com/posts/view/building-a-confirm-dialog-flow-with-htmx?utm_source=rss</link><guid>https://mark-story.com/posts/view/building-a-confirm-dialog-flow-with-htmx?utm_source=rss</guid><description>When re-building docket with htmx, I wanted to retain the confirm dialog experience I had with react. Instead of taking on a dependency for this, I chose to build my own combining HTMX and Webcomponents. The resulting UX feels snappy and similar to a client rendered experience. My end result looks like this:

</description><pubDate>Sun, 16 Jun 2024 03:49:06 +0000</pubDate></item><item><title>Building a responsive sidebar application layout</title><link>https://mark-story.com/posts/view/building-a-responsive-sidebar-application-layout?utm_source=rss</link><guid>https://mark-story.com/posts/view/building-a-responsive-sidebar-application-layout?utm_source=rss</guid><description>I wanted to share a CSS and webcomponent layout that I&#x2019;ve been pretty happy with in a few projects. With webcomponents now widely supported, I was able to remove one of the last bit of inline scripts I had left in docket converting it to a webcomponent. The layout offers a layout with a 250px sidebar and content area.</description><pubDate>Sun, 17 Mar 2024 01:33:41 +0000</pubDate></item><item><title>Building my first htmx application</title><link>https://mark-story.com/posts/view/building-my-first-htmx-application?utm_source=rss</link><guid>https://mark-story.com/posts/view/building-my-first-htmx-application?utm_source=rss</guid><description>After updating docket to use htmx, I wanted to share my experience. First and most important, HTMX is more than just a client side framework. Instead of using a JavaScript library to render your application in the browser, you have incrementally load HTML as your application&#x2019;s state changes.</description><pubDate>Sun, 04 Feb 2024 17:53:35 +0000</pubDate></item><item><title>Webcomponents and CakePHP FormHelper</title><link>https://mark-story.com/posts/view/webcomponents-and-cakephp-formhelper?utm_source=rss</link><guid>https://mark-story.com/posts/view/webcomponents-and-cakephp-formhelper?utm_source=rss</guid><description>Webcomponents are starting to get more traction now that they are fully supported across browsers. I have recently been rebuilding my personal todo list software Docket with HTMX and Webcomponents.</description><pubDate>Sat, 30 Dec 2023 04:44:01 +0000</pubDate></item><item><title>Bitfields are a trap</title><link>https://mark-story.com/posts/view/bitfields-are-a-trap?utm_source=rss</link><guid>https://mark-story.com/posts/view/bitfields-are-a-trap?utm_source=rss</guid><description>I recently came across this video on Youtube and while the author makes some convincing arguments for using bitfields. I&#x2019;d like to share my experiences having worked with them in a few applications. A long time ago, I also thought that bitfields were neat.</description><pubDate>Sun, 26 Nov 2023 00:52:25 +0000</pubDate></item><item><title>My Upgrades to CakePHP 4.5.0</title><link>https://mark-story.com/posts/view/my-upgrades-to-cakephp-4-5-0?utm_source=rss</link><guid>https://mark-story.com/posts/view/my-upgrades-to-cakephp-4-5-0?utm_source=rss</guid><description>A few months back I upgraded docket and this site to CakePHP 4.5 from an earlier 4.x release. I wanted to share my notes from the upgrade process so that if you&#x2019;re considering an upgrade you have a better idea of what to expect.</description><pubDate>Fri, 13 Oct 2023 03:24:38 +0000</pubDate></item><item><title>Sudo Mode with CakePHP Authorization Plugin</title><link>https://mark-story.com/posts/view/sudo-mode-with-cakephp-authorization-plugin?utm_source=rss</link><guid>https://mark-story.com/posts/view/sudo-mode-with-cakephp-authorization-plugin?utm_source=rss</guid><description>I&#x2019;ve been working on content for my CakeFest workshop this year, and thought it would be interesting to see a commonly used authorization pattern implemented as an extension to CakePHP&#x2019;s authorization system. The pattern I wanted to implement was &#x2018;sudo mode&#x2019;. Often this pattern is used in applications that have longer session duration.</description><pubDate>Tue, 15 Aug 2023 03:39:20 +0000</pubDate></item><item><title>Webauthn in CakePHP</title><link>https://mark-story.com/posts/view/webauthn-in-cakephp?utm_source=rss</link><guid>https://mark-story.com/posts/view/webauthn-in-cakephp?utm_source=rss</guid><description>I have been following the Webauthn standards and browser support since the early days of FIDO compatible keys. I strongly believe that hardware keys are our best path forward to provide phishing resistant, easy to operate authentication, that doesn&#x2019;t compromise on privacy.</description><pubDate>Wed, 31 May 2023 03:32:08 +0000</pubDate></item><item><title/><link>https://mark-story.com/posts/view/getting-started-with-ajax-pagination-alpinejs?utm_source=rss</link><guid>https://mark-story.com/posts/view/getting-started-with-ajax-pagination-alpinejs?utm_source=rss</guid><description>I recently decided to go down a rabbit hole of wanting to learn a new client side library. I was interested in learning more about libraries that aimed to have a minimal footprint even at the cost of providing a more modest API. For this site I have simple requirements, and I wanted to see how simple the &#x2018;simple&#x2019; abstractions are these days.</description><pubDate>Mon, 27 Mar 2023 00:10:01 +0000</pubDate></item><item><title>Using phive to install PHP tools</title><link>https://mark-story.com/posts/view/using-phive-to-install-php-tools?utm_source=rss</link><guid>https://mark-story.com/posts/view/using-phive-to-install-php-tools?utm_source=rss</guid><description>Modern PHP development generally means using a suite of tools to perform code formatting and static analysis. For a long time, I have been using composer to install theses developement tools. While using composer works great, when you&#x2019;re working on multiple projects it results in duplicate copies of frequently used tools.</description><pubDate>Sat, 25 Feb 2023 02:39:18 +0000</pubDate></item><item><title>Maintaining an active open source schedule for 15 years</title><link>https://mark-story.com/posts/view/maintaining-an-active-open-source-schedule-for-15-years?utm_source=rss</link><guid>https://mark-story.com/posts/view/maintaining-an-active-open-source-schedule-for-15-years?utm_source=rss</guid><description>A few weeks back I came across a site that can generate all of your GitHub activity into a single chart. Looking at mine, I noticed that I have been fairly consistent in my activity over the past 15 years.</description><pubDate>Sun, 22 Jan 2023 02:40:40 +0000</pubDate></item><item><title>Flutter MVVM Application Architecture</title><link>https://mark-story.com/posts/view/flutter-mvvm-application-architecture?utm_source=rss</link><guid>https://mark-story.com/posts/view/flutter-mvvm-application-architecture?utm_source=rss</guid><description>Each year I try to learn a new language, framework or technology. This practice encourages me to continuously learn new skills and be a newbie again. This year, I&#x2019;ve spent the past few months working on a mobile client for Docket . While the mobile web UI works well enough, I wanted to see if the UX could be smoother with a native application.</description><pubDate>Thu, 29 Dec 2022 03:05:11 +0000</pubDate></item><item><title>Content-Type Negotiation in CakePHP 4.4</title><link>https://mark-story.com/posts/view/content-type-negotiation-in-cakephp-4-4?utm_source=rss</link><guid>https://mark-story.com/posts/view/content-type-negotiation-in-cakephp-4-4?utm_source=rss</guid><description>During my workshop at Cakefest 2022 I covered the new content-type negotiation features shipped in CakePHP 4.4. I wanted to share that information here so it is more easily found in the future.</description><pubDate>Wed, 05 Oct 2022 06:44:08 +0000</pubDate></item><item><title>New in CakePHP - Improved Error and Exception Handling</title><link>https://mark-story.com/posts/view/new-in-cakephp-improved-error-and-exception-handling?utm_source=rss</link><guid>https://mark-story.com/posts/view/new-in-cakephp-improved-error-and-exception-handling?utm_source=rss</guid><description>CakePHP 4.4.0RC1 was released recently and I wanted to go over the new error subsystem that is being added for 4.4. I haven&#x2019;t ever really loved the interface that CakePHP provided for error and exception handling.</description><pubDate>Thu, 24 Mar 2022 01:59:22 +0000</pubDate></item><item><title>Designing my first Keyboard PCB</title><link>https://mark-story.com/posts/view/designing-my-first-keyboard-pcb?utm_source=rss</link><guid>https://mark-story.com/posts/view/designing-my-first-keyboard-pcb?utm_source=rss</guid><description>In 2021, I designed and built a custom split keyboard . I quite enjoy that keyboard, and it has been my daily driver for the past eight months. After completing the hand wired board, I wanted to learn more about electronics, and keyboards. The natural next step to me was to learn how to take my custom layout to the next level of completion.</description><pubDate>Tue, 08 Feb 2022 05:25:02 +0000</pubDate></item><item><title>Improved CASE expression in CakePHP 4.3</title><link>https://mark-story.com/posts/view/improved-case-expression-in-cakephp-4-3?utm_source=rss</link><guid>https://mark-story.com/posts/view/improved-case-expression-in-cakephp-4-3?utm_source=rss</guid><description>CakePHP 4.3 was recently released, and it contains a greatly improved way to build CASE expressions. CASE expressions are great when you want to do conditional aggregation or add computed fields to results. Lets say you wanted to create SQL that mapped integer values to string names, you could use SQL that looks like:</description><pubDate>Tue, 23 Nov 2021 03:18:42 +0000</pubDate></item><item><title>Switching to NeoVim Native LSP</title><link>https://mark-story.com/posts/view/switching-to-neovim-native-lsp?utm_source=rss</link><guid>https://mark-story.com/posts/view/switching-to-neovim-native-lsp?utm_source=rss</guid><description>I do all of my day to day work in vim, specifically NeoVim . One of my favorite plugins as of late has been the CoC plugin. CoC provides language server integrations, autocompletion, linting, and formatting all in one easy use package.</description><pubDate>Sun, 15 Aug 2021 17:52:59 +0000</pubDate></item><item><title>Building a Split Keyboard Part 3</title><link>https://mark-story.com/posts/view/building-a-split-keyboard-part-3?utm_source=rss</link><guid>https://mark-story.com/posts/view/building-a-split-keyboard-part-3?utm_source=rss</guid><description>In part 2 I covered the electrial design, and component selections I made for my keyboard project. In this post we&#x2019;ll dive into the finishing, and assembly process.</description><pubDate>Wed, 07 Jul 2021 04:12:18 +0000</pubDate></item><item><title>Building a Split Keyboard part 2</title><link>https://mark-story.com/posts/view/building-a-split-keyboard-part-2?utm_source=rss</link><guid>https://mark-story.com/posts/view/building-a-split-keyboard-part-2?utm_source=rss</guid><description>In part 1 I covered the physical/mechanical design of my keyboard project. In this post we&#x2019;ll dive into the electrical design and touch on firmware development.</description><pubDate>Tue, 08 Jun 2021 04:52:09 +0000</pubDate></item></channel></rss>
