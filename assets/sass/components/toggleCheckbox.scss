// Toggle buttons convert a checkbox into
// an on/off switch.
$toggle-width: $button-med-height * 1.5;
$toggle-knob-diameter: 26px;

.toggle-checkbox {
  position: relative;
  display: inline-flex;

  // Hide the input without removing tabindex.
  input {
    opacity: 0;
    position: absolute;
    pointer-events: none;
  }

  .track {
    display: block;
    background: var(--color-toggle-bg);
    border: 1px solid var(--color-border);
    width: $toggle-width;
    height: $button-med-height / 2;
    border-radius: 10px;
    margin-right: $space;
    box-shadow: $shadow-inset;
  }

  .knob {
    position: absolute;
    top: -3px;

    display: flex;
    align-items: center;
    justify-content: center;

    height: $toggle-knob-diameter;
    width: $toggle-knob-diameter;
    border-radius: 50%;
    border: 1px solid var(--color-border);
    box-shadow: $shadow-med;
    background: var(--color-bg);

    z-index: 1;
    cursor: pointer;

    transition: all 200ms cubic-bezier(0.445, 0.05, 0.55, 0.95);
    transform: translateX(0px);
  }

  // Active state for the knob
  input:focus + .knob,
  input:focus + .knob {
    border-color: var(--color-input-focus-border);
    box-shadow: var(--color-input-focus-shadow) 0 0 0 3px;
  }
  // Checked state for the knob
  input:checked + .knob + .track {
    background: var(--color-toggle-bg-checked);
  }
  input:checked + .knob {
    background: var(--color-toggle-checked);
    transform: translateX(($toggle-width / 2) + 3);
    border-color: var(--color-toggle-checked);
  }
}


// Disabled toggles
.toggle-disabled {
  cursor: not-allowed;

  .toggle-switch {
    cursor: not-allowed;
    background: var(--color-muted);
  }
  .toggle-switch:before {
    color: var(--color-muted);
  }
}
